<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.zju.ccnt.user.dao.UserMapper">
  <resultMap id="BaseResultMap" type="edu.zju.ccnt.user.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="industry" jdbcType="VARCHAR" property="industry" />
    <result column="organization_id" jdbcType="INTEGER" property="organizationId" />
    <result column="checked" jdbcType="INTEGER" property="checked" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, username, password, role_id, phone, email, industry, organization_id, checked, 
    remarks, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.zju.ccnt.user.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user (id, username, password, 
      role_id, phone, email, 
      industry, organization_id, checked, 
      remarks, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{industry,jdbcType=VARCHAR}, #{organizationId,jdbcType=INTEGER}, #{checked,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.zju.ccnt.user.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="industry != null">
        industry,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="checked != null">
        checked,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="industry != null">
        #{industry,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="checked != null">
        #{checked,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.zju.ccnt.user.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="industry != null">
        industry = #{industry,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null">
        organization_id = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="checked != null">
        checked = #{checked,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.zju.ccnt.user.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      industry = #{industry,jdbcType=VARCHAR},
      organization_id = #{organizationId,jdbcType=INTEGER},
      checked = #{checked,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="checkUserName" parameterType="string" resultType="int">
    select count(1) from user
    where username = #{username}
  </select>

  <select id="checkEmail" parameterType="string" resultType="int">
    select count(1) from user
    where email = #{email}
  </select>

  <select id="checkPhone" parameterType="string" resultType="int">
    select count(1) from user
    where phone = #{phone}
  </select>

  <select id="login" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{username} and password = #{password}
  </select>

  <select id="checkEmailAndUserid" parameterType="map" resultType="int">
    select count(1) from user
    where email = #{email}
    and id != #{userid}
  </select>

  <select id="checkPhoneAndUserid" parameterType="map" resultType="int">
    select count(1) from user
    where phone = #{phone}
    and id != #{userid}
  </select>

  <select id="selectByAdmin" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    <where>
      username like #{username}
      and role_id != 1
      <if test="checked != null">
        and checked = #{checked}
      </if>
    </where>
  </select>


  <select id="selectByUsername" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{userName}
  </select>

  <select id="selectByUserOrginationAndRoleId" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where organization_id = #{organizationId}
    and  role_id in
    <foreach close=")" collection="roleList" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </select>

  <select id="selectByOrganizationIdAndRole" parameterType="map" resultMap="BaseResultMap">
    SELECT
    id
    FROM user
    where role_id = #{roleId}
    and organization_id in
    <foreach close=")" collection="organizations" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </select>

  <select id="selectByOrginationAndRoleId" parameterType="map" resultType="int">
    select
    id
    from user
    where organization_id = #{organizationId}
    and  role_id in
    <foreach close=")" collection="roleList" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </select>

  <select id="checkUsernameAndUserid" parameterType="map" resultType="int">
    select count(1) from user
    where username = #{username}
    and id != #{userid}
  </select>

  <select id="selectAdmins" parameterType="int" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where role_id = #{roleId}
  </select>

  <select id="selectByOrganizationAndRoleId" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where role_id = #{roleId}
    and organization_id = #{organizationId}
    and checked = #{checked}
  </select>

  <select id="selectByOrganizationAndRole" parameterType="map" resultType="int">
    select
    COUNT(1)
    from user
    where role_id = #{roleId}
    and organization_id = #{organizationId}
    and checked = #{checked}
  </select>


</mapper>