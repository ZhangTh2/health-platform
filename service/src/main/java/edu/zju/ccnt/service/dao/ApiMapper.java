package edu.zju.ccnt.service.dao;

import edu.zju.ccnt.service.model.Api;
import edu.zju.ccnt.service.model.ApiCoreInfo;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface ApiMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api
     *
     * @mbg.generated
     */
    int insert(Api record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api
     *
     * @mbg.generated
     */
    int insertSelective(Api record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api
     *
     * @mbg.generated
     */
    Api selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(Api record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table api
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(Api record);

    /**
     * 以下为自己添加的
     */

    int selectByNameAndServiceId(@Param("name") String name, @Param("serviceId") Integer serviceId);        //查询该服务下面已经有名字为name的api了

    int selectByApiAddress(String apiAddress);  //查看是否已经存在apiaddress


    List<ApiCoreInfo> selectApiCoreInfo();

    List<Api> selectByServiceIdAndStatus(@Param("serviceId") Integer serviceId, @Param("status") Integer status, @Param("checked") Integer checked);       //根据服务id查询，用户只能查询已审核的和状态正常的

    ApiCoreInfo selectApiCoreInfoByApiPath(String apiPath);

    int selectByPathList(@Param("pathList") List<String> pathList);

    int selectByPathAndApiId(@Param("path") String path,@Param("apiId") Integer apiId);

    int selectByApiAddressAndApiId(@Param("apiAddress") String apiAddress,@Param("apiId") Integer apiId);

    //根据服务id列表查询，用户只能查询已审核的和状态正常的
    List<Api> selectByServiceIdsAndStatus(@Param("serviceIdList") List<Integer> serviceIdList, @Param("status") Integer status, @Param("checked") Integer checked);

    int selectByNameAndServiceIdAndApiId(@Param("name") String name, @Param("serviceId") Integer serviceId,@Param("apiId")Integer apiId);        //查询该服务下面已经有名字为name的api了

    Api selectByPath(@Param("path") String path, @Param("status") Integer status, @Param("checked") Integer checked);
}